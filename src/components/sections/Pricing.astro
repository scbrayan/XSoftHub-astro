---
import { useTranslations } from "../../i18n/utils";
import type { ComponentProps } from "../../types";
import { Arrow, Feature } from "../icons/ui";

interface Props extends ComponentProps {}
const { lang, pricing } = Astro.props as Props & { pricing: any };
const t = useTranslations(lang);

// Obtener las traducciones espec√≠ficas de precios
---

<section>
    <div class="container">
        <div class="cs-tabs cs-style1">
            <div class="cs-tabs_heading">
                <div class="cs-section_heading cs-style1">
                    <h3 class="cs-section_subtitle">{pricing.subtitle}</h3>
                    <h2 class="cs-section_title">
                        {pricing.title}
                    </h2>
                </div>
                <ul class="cs-tab_links cs-style1 cs-mp0 cs-primary_font">
                    <li><a href="#tab_1">{pricing.monthly}</a></li>
                    <li class="active">
                        <a href="#tab_2">{pricing.yearly}</a>
                    </li>
                </ul>
            </div><!-- .cs-tabs_heading -->
            <div class="cs-height_85 cs-height_lg_40"></div>
            <div class="cs-tab_body">
                {
                    ["monthly", "yearly"].map((period, periodIndex) => (
                        <div
                            class={`cs-tab ${periodIndex === 1 ? "active" : ""}`}
                            id={`tab_${periodIndex + 1}`}
                        >
                            <div class="row">
                                {pricing.plans.map((plan: any) => (
                                    <div class="col-lg-4">
                                        <div class="cs-pricing_table cs-style1">
                                            <h2 class="cs-pricing_title">
                                                {plan.title}
                                            </h2>
                                            <div class="cs-pricing_info">
                                                <div class="cs-price">
                                                    {plan.id ===
                                                    "enterprise" ? (
                                                        <div class="cs-price_text">
                                                            {
                                                                plan.prices[
                                                                    period
                                                                ].amount
                                                            }
                                                        </div>
                                                    ) : (
                                                        <div class="cs-price_wrap">
                                                            <h3 class="cs-white_color">
                                                                $
                                                                {
                                                                    plan.prices[
                                                                        period
                                                                    ].amount
                                                                }
                                                                /
                                                            </h3>
                                                            <span class="cs-accent_color">
                                                                {
                                                                    pricing[
                                                                        period
                                                                    ]
                                                                }
                                                            </span>
                                                        </div>
                                                    )}
                                                </div>
                                                <div class="cs-price_text">
                                                    {
                                                        plan.prices[period]
                                                            .description
                                                    }
                                                </div>
                                            </div>
                                            <ul class="cs-pricing_feature cs-mp0">
                                                {plan.features.map(
                                                    (feature: string) => (
                                                        <li>
                                                            <span class="cs-feature_icon cs-accent_color">
                                                                <Feature />
                                                            </span>
                                                            <span>
                                                                {feature}
                                                            </span>
                                                        </li>
                                                    ),
                                                )}
                                            </ul>
                                            <div class="cs-pricing_btn_wrap">
                                                <a href="#" class="cs-text_btn">
                                                    <span>{plan.button}</span>
                                                    <Arrow />
                                                </a>
                                            </div>
                                        </div>
                                        <div class="cs-height_25 cs-height_lg_25" />
                                    </div>
                                ))}
                            </div>
                        </div>
                    ))
                }
            </div>
        </div>
    </div>
</section>

<style>
    .cs-tab {
        display: none;
    }
    .cs-tab.active {
        display: block;
    }
    .cs-tab_links.cs-style1 {
        display: flex;
        gap: 1rem;
        justify-content: center;
    }
    .cs-tab_links.cs-style1 li a {
        padding: 8px 25px;
        border-radius: 10px;
        transition: all 0.3s ease;
    }
    .cs-tab_links.cs-style1 li.active a {
        /* background-color: var(--accent-color); */
    }
    .cs-pricing_table {
        transition: all 0.3s ease;
        border: 1px solid transparent;
        height: 100%;
        display: flex;
        flex-direction: column;
    }
    .cs-pricing_table:hover {
        /* border-color: var(--accent-color); */
        transform: translateY(-10px);
    }
    .cs-price_wrap {
        display: flex;
        align-items: baseline;
        gap: 0.25rem;
    }
    .cs-price_wrap h3 {
        margin: 0;
        font-size: 38px;
    }
    .cs-price_wrap span {
        font-size: 18px;
    }
    .cs-pricing_feature {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 8px;
        margin: 0;
        padding: 20px 0;
    }
    .cs-pricing_feature li {
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 15px;
        line-height: 1.3;
    }
    .cs-feature_icon {
        flex-shrink: 0;
        display: flex;
        align-items: center;
    }
    @media screen and (min-width: 992px) {
        .cs-tab .row {
            display: flex;
            align-items: stretch;
        }
        .cs-tab .col-lg-4 {
            display: flex;
            flex-direction: column;
        }
    }
</style>
